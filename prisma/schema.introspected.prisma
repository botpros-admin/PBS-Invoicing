generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model User {
  instance_id                                       String?            @db.Uuid
  id                                                String             @id @db.Uuid
  aud                                               String?            @db.VarChar(255)
  role                                              String?            @db.VarChar(255)
  email                                             String?            @db.VarChar(255)
  encrypted_password                                String?            @db.VarChar(255)
  email_confirmed_at                                DateTime?          @db.Timestamptz(6)
  invited_at                                        DateTime?          @db.Timestamptz(6)
  confirmation_token                                String?            @db.VarChar(255)
  confirmation_sent_at                              DateTime?          @db.Timestamptz(6)
  recovery_token                                    String?            @db.VarChar(255)
  recovery_sent_at                                  DateTime?          @db.Timestamptz(6)
  email_change_token_new                            String?            @db.VarChar(255)
  email_change                                      String?            @db.VarChar(255)
  email_change_sent_at                              DateTime?          @db.Timestamptz(6)
  last_sign_in_at                                   DateTime?          @db.Timestamptz(6)
  raw_app_meta_data                                 Json?
  raw_user_meta_data                                Json?
  is_super_admin                                    Boolean?
  created_at                                        DateTime?          @db.Timestamptz(6)
  updated_at                                        DateTime?          @db.Timestamptz(6)
  phone                                             String?            @unique
  phone_confirmed_at                                DateTime?          @db.Timestamptz(6)
  phone_change                                      String?            @default("")
  phone_change_token                                String?            @default("") @db.VarChar(255)
  phone_change_sent_at                              DateTime?          @db.Timestamptz(6)
  confirmed_at                                      DateTime?          @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                        String?            @default("") @db.VarChar(255)
  email_change_confirm_status                       Int?               @default(0) @db.SmallInt
  banned_until                                      DateTime?          @db.Timestamptz(6)
  reauthentication_token                            String?            @default("") @db.VarChar(255)
  reauthentication_sent_at                          DateTime?          @db.Timestamptz(6)
  is_sso_user                                       Boolean            @default(false)
  deleted_at                                        DateTime?          @db.Timestamptz(6)
  is_anonymous                                      Boolean            @default(false)
  identities                                        identities[]
  mfa_factors                                       mfa_factors[]
  one_time_tokens                                   one_time_tokens[]
  sessions                                          sessions[]
  account_credits                                   account_credits[]
  client_users                                      client_users[]
  disputes_disputes_assigned_toTousers              disputes[]         @relation("disputes_assigned_toTousers")
  disputes_disputes_created_byTousers               disputes[]         @relation("disputes_created_byTousers")
  import_queues                                     import_queues[]
  invoices_invoices_created_byTousers               invoices[]         @relation("invoices_created_byTousers")
  invoices_invoices_finalized_byTousers             invoices[]         @relation("invoices_finalized_byTousers")
  payment_credits_payment_credits_created_byTousers payment_credits[]  @relation("payment_credits_created_byTousers")
  payment_credits_payment_credits_updated_byTousers payment_credits[]  @relation("payment_credits_updated_byTousers")
  user_permissions                                  user_permissions[]
  user_profiles                                     user_profiles[]
  user_roles                                        user_roles[]
  users                                             users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                User             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      User                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          User             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account_credits {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id    String        @db.Uuid
  client_id          String        @db.Uuid
  credit_number      String
  amount             Decimal       @db.Decimal(12, 2)
  reason             String
  credit_date        DateTime      @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiration_date    DateTime?     @db.Date
  used_amount        Decimal?      @default(0) @db.Decimal(12, 2)
  remaining_amount   Decimal?      @default(dbgenerated("(amount - used_amount)")) @db.Decimal(12, 2)
  status             String        @default("active")
  related_invoice_id String?       @db.Uuid
  notes              String?
  created_by         String?       @db.Uuid
  created_at         DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?     @default(now()) @db.Timestamptz(6)
  clients            clients       @relation(fields: [client_id], references: [id], onUpdate: NoAction)
  users              User?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations      organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  invoices           invoices?     @relation(fields: [related_invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([organization_id, credit_number])
  @@index([client_id], map: "idx_account_credits_client_id")
  @@index([created_at(sort: Desc)], map: "idx_account_credits_created_at")
  @@index([status], map: "idx_account_credits_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id             BigInt        @id @default(autoincrement())
  user_id        BigInt?
  client_user_id BigInt?
  action         String        @db.VarChar(100)
  entity_type    String        @db.VarChar(100)
  entity_id      BigInt?
  description    String
  old_values     Json?
  new_values     Json?
  ip_address     String?       @db.VarChar(45)
  user_agent     String?
  created_at     DateTime      @default(now()) @db.Timestamptz(6)
  client_users   client_users? @relation(fields: [client_user_id], references: [id], onUpdate: NoAction)
  users          users?        @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model automation_rules {
  id                 BigInt           @id @default(autoincrement())
  email_template_id  BigInt?
  client_id          BigInt?
  name               String           @db.VarChar(255)
  description        String?
  trigger_event      String           @db.VarChar(50)
  condition_logic    String?
  delay_value        Int?
  delay_unit         String?          @db.VarChar(10)
  is_active          Boolean          @default(true)
  created_at         DateTime         @default(now()) @db.Timestamptz(6)
  updated_at         DateTime         @default(now()) @db.Timestamptz(6)
  created_by_user_id BigInt?
  users              users?           @relation(fields: [created_by_user_id], references: [id], onUpdate: NoAction)
  email_templates    email_templates? @relation(fields: [email_template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([name, client_id], map: "unique_rule_name_client")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model billing_companies {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @db.VarChar(255)
  code         String         @unique @db.VarChar(50)
  address      String?        @db.VarChar(500)
  city         String?        @db.VarChar(100)
  state        String?        @db.VarChar(50)
  zip          String?        @db.VarChar(20)
  phone        String?        @db.VarChar(50)
  email        String?        @db.VarChar(255)
  tax_id       String?        @db.VarChar(50)
  active       Boolean?       @default(true)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?      @default(now()) @db.Timestamptz(6)
  laboratories laboratories[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model client_pricing_overrides {
  id              BigInt    @id @default(autoincrement())
  client_id       BigInt
  cpt_code_id     BigInt
  price           Decimal   @db.Decimal(10, 2)
  negotiated_note String?
  start_date      DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  end_date        DateTime? @db.Date
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime  @default(now()) @db.Timestamptz(6)

  @@unique([client_id, cpt_code_id, start_date], map: "unique_client_cpt_period")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model client_users {
  id                       BigInt                     @id @default(autoincrement())
  uuid                     String                     @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  client_id                BigInt
  auth_id                  String?                    @db.Uuid
  first_name               String                     @db.VarChar(100)
  last_name                String                     @db.VarChar(100)
  email                    String                     @unique @db.VarChar(255)
  phone                    String?                    @db.VarChar(50)
  role                     client_user_role           @default(user)
  status                   user_status                @default(active)
  job_title                String?                    @db.VarChar(100)
  department               String?                    @db.VarChar(100)
  avatar_url               String?
  mfa_enabled              Boolean                    @default(false)
  last_activity_at         DateTime?                  @db.Timestamptz(6)
  can_view_all_clinics     Boolean                    @default(false)
  can_upload_invoices      Boolean                    @default(false)
  can_make_payments        Boolean                    @default(false)
  can_dispute_invoices     Boolean                    @default(false)
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @db.Timestamptz(6)
  deleted_at               DateTime?                  @db.Timestamptz(6)
  notes                    String?
  role_id                  String?                    @db.Uuid
  organization_id          String?                    @db.Uuid
  audit_logs               audit_logs[]
  users                    User?                      @relation(fields: [auth_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organizations            organizations?             @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles                    roles?                     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  clinic_contacts          clinic_contacts[]
  invoice_attachments      invoice_attachments[]
  invoice_history          invoice_history[]
  invoice_line_items       invoice_line_items[]
  notification_preferences notification_preferences[]
  notifications            notifications[]
  payment_attachments      payment_attachments[]
  payments                 payments[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clients {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String            @db.Uuid
  name            String
  code            String?
  address_line1   String?
  address_line2   String?
  city            String?
  state           String?
  zip_code        String?
  phone           String?
  email           String?
  contact_person  String?
  billing_terms   Int?              @default(30)
  is_active       Boolean?          @default(true)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  tenant_id       String?           @db.Uuid
  laboratory_id   String?           @db.Uuid
  parent_id       String?           @db.Uuid
  sales_rep       String?           @db.VarChar(255)
  account_credits account_credits[]
  laboratories    laboratories?     @relation(fields: [laboratory_id], references: [id], onUpdate: NoAction)
  organizations   organizations     @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  clients         clients?          @relation("clientsToclients", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_clients   clients[]         @relation("clientsToclients")
  credits         credits[]
  fee_schedules   fee_schedules[]
  invoices        invoices[]
  payment_credits payment_credits[]
  pricing_rules   pricing_rules[]

  @@unique([organization_id, code])
  @@index([created_at(sort: Desc)], map: "idx_clients_created_at")
  @@index([is_active], map: "idx_clients_is_active")
  @@index([laboratory_id], map: "idx_clients_laboratory")
  @@index([parent_id], map: "idx_clients_parent")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clinic_contacts {
  id                       BigInt          @id @default(autoincrement())
  uuid                     String          @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  clinic_id                BigInt
  first_name               String          @db.VarChar(100)
  last_name                String          @db.VarChar(100)
  title                    String?         @db.VarChar(255)
  email                    String?         @db.VarChar(255)
  phone                    String?         @db.VarChar(50)
  mobile_phone             String?         @db.VarChar(50)
  fax                      String?         @db.VarChar(50)
  department               String?         @db.VarChar(100)
  is_primary               Boolean         @default(false)
  is_billing_contact       Boolean         @default(false)
  preferred_contact_method contact_method?
  client_user_id           BigInt?
  created_at               DateTime        @default(now()) @db.Timestamptz(6)
  updated_at               DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at               DateTime?       @db.Timestamptz(6)
  notes                    String?
  client_users             client_users?   @relation(fields: [client_user_id], references: [id], onUpdate: NoAction)
  clinics                  clinics         @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([clinic_id, is_primary], map: "unique_primary_contact_per_clinic")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clinic_pricing_overrides {
  id              BigInt    @id @default(autoincrement())
  clinic_id       BigInt
  cpt_code_id     BigInt
  price           Decimal   @db.Decimal(10, 2)
  negotiated_note String?
  start_date      DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  end_date        DateTime? @db.Date
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime  @default(now()) @db.Timestamptz(6)
  clinics         clinics   @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([clinic_id, cpt_code_id, start_date], map: "unique_clinic_cpt_period")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model clinics {
  id                       BigInt                     @id @default(autoincrement())
  uuid                     String                     @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  client_id                BigInt
  parent_clinic_id         BigInt?
  name                     String                     @db.VarChar(255)
  short_name               String?                    @db.VarChar(50)
  facility_type            facility_type?             @default(hospital)
  logo_url                 String?
  address_line1            String
  address_line2            String?
  city                     String                     @db.VarChar(100)
  state                    String                     @db.VarChar(50)
  zip_code                 String                     @db.VarChar(20)
  country                  String?                    @default("United States") @db.VarChar(100)
  main_phone               String?                    @db.VarChar(50)
  main_fax                 String?                    @db.VarChar(50)
  main_email               String?                    @db.VarChar(255)
  latitude                 Decimal?                   @db.Decimal(10, 8)
  longitude                Decimal?                   @db.Decimal(11, 8)
  bill_to_address_line1    String?
  bill_to_address_line2    String?
  bill_to_city             String?                    @db.VarChar(100)
  bill_to_state            String?                    @db.VarChar(50)
  bill_to_zip_code         String?                    @db.VarChar(20)
  bill_to_country          String?                    @default("United States") @db.VarChar(100)
  bill_to_attention        String?                    @db.VarChar(255)
  tax_id                   String?                    @db.VarChar(50)
  npi_number               String?                    @db.VarChar(50)
  sales_rep_name           String?                    @db.VarChar(255)
  sales_rep_email          String?                    @db.VarChar(255)
  sales_rep_phone          String?                    @db.VarChar(50)
  preferred_contact_method contact_method?
  contract_start_date      DateTime?                  @db.Date
  contract_end_date        DateTime?                  @db.Date
  contract_document_path   String?
  contract_terms           String?
  is_active                Boolean                    @default(true)
  special_instructions     String?
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @db.Timestamptz(6)
  deleted_at               DateTime?                  @db.Timestamptz(6)
  notes                    String?
  clinic_contacts          clinic_contacts[]
  clinic_pricing_overrides clinic_pricing_overrides[]
  clinics                  clinics?                   @relation("clinicsToclinics", fields: [parent_clinic_id], references: [id], onUpdate: NoAction)
  other_clinics            clinics[]                  @relation("clinicsToclinics")

  @@unique([client_id, name])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cpt_codes {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String          @db.Uuid
  code            String
  description     String
  category        String?
  is_active       Boolean?        @default(true)
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?       @default(now()) @db.Timestamptz(6)
  organizations   organizations   @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  invoice_items   invoice_items[]
  pricing_rules   pricing_rules[]

  @@unique([organization_id, code])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cpt_mappings {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  laboratory_id String?       @db.Uuid
  input_code    String        @db.VarChar(50)
  output_code   String        @db.VarChar(50)
  description   String?
  display_name  String?       @db.VarChar(255)
  category      String?       @db.VarChar(100)
  is_active     Boolean?      @default(true)
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  laboratories  laboratories? @relation(fields: [laboratory_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([laboratory_id, input_code])
  @@index([laboratory_id, input_code], map: "idx_cpt_mappings_lookup")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model credit_applications {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_id    String?   @db.Uuid
  invoice_id   String?   @db.Uuid
  line_item_id String?   @db.Uuid
  amount       Decimal   @db.Decimal(10, 2)
  applied_at   DateTime? @default(now()) @db.Timestamptz(6)
  applied_by   String?   @db.Uuid
  auto_applied Boolean?  @default(false)
  credits      credits?  @relation(fields: [credit_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  invoices     invoices? @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([credit_id], map: "idx_credit_applications_credit_id")
  @@index([invoice_id], map: "idx_credit_applications_invoice_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model credits {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clinic_id           String?               @db.Uuid
  amount              Decimal               @db.Decimal(10, 2)
  original_amount     Decimal               @db.Decimal(10, 2)
  reason              String
  source_type         String?               @db.VarChar(50)
  source_payment_id   String?               @db.Uuid
  dispute_id          String?               @db.Uuid
  status              String?               @default("available") @db.VarChar(50)
  expires_at          DateTime?             @db.Timestamptz(6)
  notes               String?
  created_by          String?               @db.Uuid
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  applied_at          DateTime?             @db.Timestamptz(6)
  credit_applications credit_applications[]
  clients             clients?              @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([clinic_id, status], map: "idx_credits_clinic")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dispute_messages {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  dispute_id  String?   @db.Uuid
  message     String
  sender_id   String?   @db.Uuid
  sender_type String?   @db.VarChar(20)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  disputes    disputes? @relation(fields: [dispute_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model disputes {
  id                                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id                   String             @db.Uuid
  invoice_id                        String             @db.Uuid
  dispute_number                    String
  disputed_amount                   Decimal            @db.Decimal(12, 2)
  reason                            String
  description                       String?
  dispute_date                      DateTime           @default(dbgenerated("CURRENT_DATE")) @db.Date
  status                            String             @default("open")
  resolution                        String?
  resolved_date                     DateTime?          @db.Date
  resolved_amount                   Decimal?           @db.Decimal(12, 2)
  created_by                        String?            @db.Uuid
  assigned_to                       String?            @db.Uuid
  created_at                        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime?          @default(now()) @db.Timestamptz(6)
  dispute_messages                  dispute_messages[]
  users_disputes_assigned_toTousers User?              @relation("disputes_assigned_toTousers", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_disputes_created_byTousers  User?              @relation("disputes_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoices                          invoices           @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organizations                     organizations      @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([organization_id, dispute_number])
  @@index([status], map: "idx_disputes_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_logs {
  id              Int       @id @default(autoincrement())
  invoice_id      BigInt?
  recipient_email String
  subject         String?
  status          String
  sent_at         DateTime? @db.Timestamptz(6)
  error_message   String?
  created_at      DateTime  @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_settings {
  id               BigInt    @id @default(autoincrement())
  setting_type     String    @unique @db.VarChar(50)
  config_details   Json
  from_email       String    @db.VarChar(255)
  from_name        String    @db.VarChar(255)
  reply_to_email   String?   @db.VarChar(255)
  is_active        Boolean   @default(true)
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)
  last_verified_at DateTime? @db.Timestamptz(6)
  notes            String?

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_templates {
  id                  BigInt             @id @default(autoincrement())
  template_type       String             @db.VarChar(50)
  code                String             @unique @db.VarChar(50)
  name                String             @db.VarChar(255)
  description         String?
  subject             String             @db.VarChar(255)
  html_content        String
  plain_text_content  String?
  available_variables Json?
  is_active           Boolean            @default(true)
  version             Int                @default(1)
  client_id           BigInt?
  created_at          DateTime           @default(now()) @db.Timestamptz(6)
  updated_at          DateTime           @default(now()) @db.Timestamptz(6)
  created_by_user_id  BigInt?
  automation_rules    automation_rules[]
  users               users?             @relation(fields: [created_by_user_id], references: [id], onUpdate: NoAction)
  sent_emails         sent_emails[]

  @@unique([template_type, client_id, version], map: "unique_template_type_client")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model fee_schedule_items {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fee_schedule_id String?        @db.Uuid
  cpt_code        String         @db.VarChar(50)
  description     String?
  price           Decimal        @db.Decimal(10, 2)
  effective_date  DateTime       @db.Date
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  fee_schedules   fee_schedules? @relation(fields: [fee_schedule_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([fee_schedule_id, cpt_code])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model fee_schedules {
  id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String               @db.VarChar(255)
  laboratory_id       String?              @db.Uuid
  clinic_id           String?              @db.Uuid
  start_date          DateTime             @db.Date
  end_date            DateTime?            @db.Date
  is_default          Boolean?             @default(false)
  is_active           Boolean?             @default(true)
  parent_schedule_id  String?              @db.Uuid
  percentage_change   Decimal?             @db.Decimal(5, 2)
  created_by          String?              @db.Uuid
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @default(now()) @db.Timestamptz(6)
  fee_schedule_items  fee_schedule_items[]
  clients             clients?             @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  laboratories        laboratories?        @relation(fields: [laboratory_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  fee_schedules       fee_schedules?       @relation("fee_schedulesTofee_schedules", fields: [parent_schedule_id], references: [id], onUpdate: NoAction)
  other_fee_schedules fee_schedules[]      @relation("fee_schedulesTofee_schedules")

  @@index([start_date, end_date], map: "idx_fee_schedules_dates")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model import_queues {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String        @db.Uuid
  filename        String
  file_size       Int?
  mime_type       String?
  status          String        @default("pending")
  total_rows      Int?
  processed_rows  Int?          @default(0)
  success_rows    Int?          @default(0)
  error_rows      Int?          @default(0)
  errors          Json?         @default("[]")
  started_at      DateTime?     @db.Timestamptz(6)
  completed_at    DateTime?     @db.Timestamptz(6)
  created_by      String?       @db.Uuid
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?     @default(now()) @db.Timestamptz(6)
  users           User?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations   organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_attachments {
  id                         BigInt        @id @default(autoincrement())
  invoice_id                 BigInt
  file_name                  String        @db.VarChar(255)
  file_path                  String
  file_type                  String        @db.VarChar(100)
  file_size                  Int
  content_type               String        @db.VarChar(100)
  is_public                  Boolean       @default(false)
  description                String?
  uploaded_by_user_id        BigInt?
  uploaded_by_client_user_id BigInt?
  created_at                 DateTime      @default(now()) @db.Timestamptz(6)
  client_users               client_users? @relation(fields: [uploaded_by_client_user_id], references: [id], onUpdate: NoAction)
  users                      users?        @relation(fields: [uploaded_by_user_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_history {
  id             BigInt        @id @default(autoincrement())
  invoice_id     BigInt
  timestamp      DateTime      @default(now()) @db.Timestamptz(6)
  user_id        BigInt?
  client_user_id BigInt?
  event_type     String        @db.VarChar(100)
  description    String
  previous_value String?
  new_value      String?
  ip_address     String?       @db.VarChar(45)
  user_agent     String?
  client_users   client_users? @relation(fields: [client_user_id], references: [id], onUpdate: NoAction)
  users          users?        @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_items {
  id                String         @id(map: "invoice_items_pkey1") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id   String         @db.Uuid
  invoice_id        String         @db.Uuid
  accession_number  String
  cpt_code_id       String         @db.Uuid
  description       String
  service_date      DateTime       @db.Date
  quantity          Int            @default(1)
  unit_price        Decimal        @db.Decimal(10, 2)
  line_total        Decimal?       @default(dbgenerated("((quantity)::numeric * unit_price)")) @db.Decimal(12, 2)
  pricing_rule_id   String?        @db.Uuid
  notes             String?
  created_at        DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?      @default(now()) @db.Timestamptz(6)
  cpt_code          String?        @db.VarChar(20)
  frozen_unit_price Decimal?       @db.Decimal(10, 2)
  frozen_line_total Decimal?       @db.Decimal(12, 2)
  invoices          invoices       @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_invoice_items_invoice")
  cpt_codes         cpt_codes      @relation(fields: [cpt_code_id], references: [id], onUpdate: NoAction)
  organizations     organizations  @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  pricing_rules     pricing_rules? @relation(fields: [pricing_rule_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([organization_id, accession_number, cpt_code_id])
  @@index([accession_number], map: "idx_invoice_items_accession_number")
  @@index([cpt_code], map: "idx_invoice_items_cpt_code")
  @@index([invoice_id], map: "idx_invoice_items_invoice_id")
  @@index([organization_id], map: "idx_invoice_items_organization_id")
  @@index([service_date], map: "idx_invoice_items_service_date")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_line_items {
  id                              BigInt                @id(map: "invoice_items_pkey") @default(autoincrement())
  invoice_id                      BigInt
  cpt_code_id                     BigInt
  custom_code                     String?               @db.VarChar(50)
  description                     String
  description_override            String?
  date_of_service                 DateTime              @db.Date
  quantity                        Int                   @default(1)
  unit_price                      Decimal               @db.Decimal(10, 2)
  discount_amount                 Decimal               @default(0.00) @db.Decimal(10, 2)
  tax_amount                      Decimal               @default(0.00) @db.Decimal(10, 2)
  tax_rate                        Decimal?              @default(0.00) @db.Decimal(5, 2)
  total                           Decimal               @db.Decimal(12, 2)
  is_disputed                     Boolean?              @default(false)
  dispute_reason                  String?
  dispute_date                    DateTime?             @db.Date
  dispute_by_client_user_id       BigInt?
  dispute_resolved_at             DateTime?             @db.Timestamptz(6)
  dispute_resolution_notes        String?
  dispute_resolved_by_user_id     BigInt?
  medical_necessity_provided      Boolean?              @default(false)
  medical_necessity_document_path String?
  icd10_codes                     String[]
  ordering_provider               String?               @db.VarChar(255)
  service_location                String?               @db.VarChar(255)
  sort_order                      Int?                  @default(0)
  created_at                      DateTime              @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime              @default(now()) @db.Timestamptz(6)
  patient_id                      BigInt?
  accession_number                String?
  is_deleted                      Boolean?              @default(false)
  deletion_reason                 String?
  payment_status                  String?               @default("pending") @db.VarChar(50)
  needs_reinvoice                 Boolean?              @default(false)
  dispute_resolved                Boolean?              @default(false)
  client_users                    client_users?         @relation(fields: [dispute_by_client_user_id], references: [id], onUpdate: NoAction, map: "invoice_items_dispute_by_client_user_id_fkey")
  users                           users?                @relation(fields: [dispute_resolved_by_user_id], references: [id], onUpdate: NoAction, map: "invoice_items_dispute_resolved_by_user_id_fkey")
  payment_allocations             payment_allocations[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_parameters {
  id                    BigInt   @id @default(autoincrement())
  client_id             BigInt?  @unique(map: "unique_client_parameters")
  show_logo             Boolean  @default(true)
  logo_position         String?  @default("top-left") @db.VarChar(20)
  header_style          String?  @default("modern") @db.VarChar(20)
  footer_style          String?  @default("simple") @db.VarChar(20)
  page_size             String?  @default("letter") @db.VarChar(20)
  company_name          String?  @db.VarChar(255)
  company_address       String?
  company_email         String?  @db.VarChar(255)
  company_phone         String?  @db.VarChar(50)
  company_website       String?  @db.VarChar(255)
  custom_header_message String?
  custom_footer_message String?
  payment_instructions  String?
  terms_and_conditions  String?
  primary_color         String?  @default("#0078D7") @db.VarChar(7)
  secondary_color       String?  @default("#ffffff") @db.VarChar(7)
  highlight_color       String?  @default("rgb(207, 240, 253)") @db.VarChar(20)
  font_family           String?  @default("Helvetica, Arial, sans-serif") @db.VarChar(100)
  font_size             String?  @default("14px") @db.VarChar(10)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoices {
  id                                 String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id                    String                @db.Uuid
  invoice_number                     String
  client_id                          String                @db.Uuid
  invoice_date                       DateTime              @default(dbgenerated("CURRENT_DATE")) @db.Date
  due_date                           DateTime              @db.Date
  billing_period_start               DateTime?             @db.Date
  billing_period_end                 DateTime?             @db.Date
  subtotal                           Decimal               @default(0) @db.Decimal(12, 2)
  tax_amount                         Decimal?              @default(0) @db.Decimal(12, 2)
  total_amount                       Decimal               @default(0) @db.Decimal(12, 2)
  paid_amount                        Decimal?              @default(0) @db.Decimal(12, 2)
  balance_due                        Decimal?              @default(dbgenerated("(total_amount - paid_amount)")) @db.Decimal(12, 2)
  status                             String                @default("draft")
  terms                              String?
  notes                              String?
  sent_at                            DateTime?             @db.Timestamptz(6)
  viewed_at                          DateTime?             @db.Timestamptz(6)
  paid_at                            DateTime?             @db.Timestamptz(6)
  created_by                         String?               @db.Uuid
  created_at                         DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                         DateTime?             @default(now()) @db.Timestamptz(6)
  date_due                           DateTime?             @db.Date
  total                              Decimal?              @default(0) @db.Decimal(10, 2)
  date_created                       DateTime?             @default(now()) @db.Timestamptz(6)
  date_paid                          DateTime?             @db.Date
  tenant_id                          String?               @db.Uuid
  frozen_subtotal                    Decimal?              @db.Decimal(12, 2)
  frozen_tax_amount                  Decimal?              @db.Decimal(12, 2)
  frozen_total_amount                Decimal?              @db.Decimal(12, 2)
  finalized_at                       DateTime?             @db.Timestamptz(6)
  finalized_by                       String?               @db.Uuid
  payment_status                     String?               @default("unpaid")
  amount_paid                        Decimal?              @default(0) @db.Decimal(12, 2)
  last_payment_date                  DateTime?             @db.Date
  payment_count                      Int?                  @default(0)
  account_credits                    account_credits[]
  credit_applications                credit_applications[]
  disputes                           disputes[]
  invoice_items                      invoice_items[]
  clients                            clients               @relation(fields: [client_id], references: [id], onUpdate: NoAction, map: "fk_invoices_client")
  users_invoices_created_byTousers   User?                 @relation("invoices_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_invoices_finalized_byTousers User?                 @relation("invoices_finalized_byTousers", fields: [finalized_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations                      organizations         @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payment_credits                    payment_credits[]

  @@unique([organization_id, invoice_number])
  @@index([client_id], map: "idx_invoices_client_id")
  @@index([created_at(sort: Desc)], map: "idx_invoices_created_at")
  @@index([date_created], map: "idx_invoices_date_created")
  @@index([date_due], map: "idx_invoices_date_due")
  @@index([due_date], map: "idx_invoices_due_date")
  @@index([invoice_date], map: "idx_invoices_invoice_date")
  @@index([invoice_number], map: "idx_invoices_invoice_number")
  @@index([organization_id], map: "idx_invoices_organization_id")
  @@index([status], map: "idx_invoices_status")
  @@index([status, created_at(sort: Desc)], map: "idx_invoices_status_created")
  @@index([total], map: "idx_invoices_total")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model laboratories {
  id                 String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  billing_company_id String?            @db.Uuid
  name               String             @db.VarChar(255)
  code               String             @unique @db.VarChar(50)
  address            String?            @db.VarChar(500)
  city               String?            @db.VarChar(100)
  state              String?            @db.VarChar(50)
  zip                String?            @db.VarChar(20)
  phone              String?            @db.VarChar(50)
  email              String?            @db.VarChar(255)
  tax_id             String?            @db.VarChar(50)
  clia_number        String?            @db.VarChar(50)
  active             Boolean?           @default(true)
  created_at         DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?          @default(now()) @db.Timestamptz(6)
  clients            clients[]
  cpt_mappings       cpt_mappings[]
  fee_schedules      fee_schedules[]
  billing_companies  billing_companies? @relation(fields: [billing_company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([billing_company_id], map: "idx_laboratories_billing_company")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notification_preferences {
  id                BigInt        @id @default(autoincrement())
  user_id           BigInt?
  client_user_id    BigInt?
  notification_type String        @db.VarChar(50)
  email_enabled     Boolean       @default(true)
  sms_enabled       Boolean       @default(false)
  in_app_enabled    Boolean       @default(true)
  client_users      client_users? @relation(fields: [client_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([client_user_id, notification_type], map: "unique_client_user_notification_type")
  @@unique([user_id, notification_type], map: "unique_user_notification_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notifications {
  id                  BigInt        @id @default(autoincrement())
  user_id             BigInt?
  client_user_id      BigInt?
  type                String        @db.VarChar(50)
  title               String        @db.VarChar(255)
  message             String
  related_entity_type String?       @db.VarChar(50)
  related_entity_id   BigInt?
  is_read             Boolean       @default(false)
  read_at             DateTime?     @db.Timestamptz(6)
  data                Json?
  created_at          DateTime      @default(now()) @db.Timestamptz(6)
  client_users        client_users? @relation(fields: [client_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users               users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model organizations {
  id                     String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String
  slug                   String              @unique
  type                   String?             @default("billing_company")
  parent_organization_id String?             @db.Uuid
  settings               Json?               @default("{}")
  subscription_tier      String?             @default("free")
  subscription_status    String?             @default("active")
  is_active              Boolean?            @default(true)
  created_at             DateTime            @default(now()) @db.Timestamptz(6)
  updated_at             DateTime            @default(now()) @db.Timestamptz(6)
  account_credits        account_credits[]
  client_users           client_users[]
  clients                clients[]
  cpt_codes              cpt_codes[]
  disputes               disputes[]
  import_queues          import_queues[]
  invoice_items          invoice_items[]
  invoices               invoices[]
  organizations          organizations?      @relation("organizationsToorganizations", fields: [parent_organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_organizations    organizations[]     @relation("organizationsToorganizations")
  pricing_rules          pricing_rules[]
  pricing_schedules      pricing_schedules[]
  user_profiles          user_profiles[]
  user_roles             user_roles[]
  users                  users[]

  @@index([parent_organization_id], map: "idx_organizations_parent")
  @@index([slug], map: "idx_organizations_slug")
  @@index([type], map: "idx_organizations_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model parent_accounts {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String     @db.VarChar(255)
  code            String     @unique @db.VarChar(50)
  billing_email   String?    @db.VarChar(255)
  billing_address String?
  payment_terms   Int?       @default(30)
  active          Boolean?   @default(true)
  created_at      DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?  @default(now()) @db.Timestamptz(6)
  payments        payments[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_allocations {
  id                   BigInt              @id @default(autoincrement())
  payment_id           BigInt
  invoice_id           BigInt
  invoice_item_id      BigInt?
  allocated_amount     Decimal             @db.Decimal(12, 2)
  notes                String?
  allocated_by_user_id BigInt?
  created_at           DateTime            @default(now()) @db.Timestamptz(6)
  updated_at           DateTime            @default(now()) @db.Timestamptz(6)
  users                users?              @relation(fields: [allocated_by_user_id], references: [id], onUpdate: NoAction)
  invoice_line_items   invoice_line_items? @relation(fields: [invoice_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payments             payments            @relation(fields: [payment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_payment_allocations_created_at")
  @@index([invoice_id], map: "idx_payment_allocations_invoice_id")
  @@index([invoice_item_id], map: "idx_payment_allocations_invoice_item_id")
  @@index([payment_id], map: "idx_payment_allocations_payment_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_attachments {
  id                         BigInt        @id @default(autoincrement())
  payment_id                 BigInt
  file_name                  String        @db.VarChar(255)
  file_path                  String
  file_type                  String        @db.VarChar(100)
  file_size                  Int
  content_type               String        @db.VarChar(100)
  description                String?
  uploaded_by_user_id        BigInt?
  uploaded_by_client_user_id BigInt?
  created_at                 DateTime      @default(now()) @db.Timestamptz(6)
  payments                   payments      @relation(fields: [payment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  client_users               client_users? @relation(fields: [uploaded_by_client_user_id], references: [id], onUpdate: NoAction)
  users                      users?        @relation(fields: [uploaded_by_user_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_credits {
  id                                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  payment_id                              BigInt?
  client_id                               String?   @db.Uuid
  amount                                  Decimal   @db.Decimal(10, 2)
  remaining_amount                        Decimal   @db.Decimal(10, 2)
  status                                  String?   @default("available") @db.VarChar(50)
  applied_to_invoice_id                   String?   @db.Uuid
  applied_at                              DateTime? @db.Timestamptz(6)
  expires_at                              DateTime? @db.Timestamptz(6)
  notes                                   String?
  created_at                              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime? @default(now()) @db.Timestamptz(6)
  created_by                              String?   @db.Uuid
  updated_by                              String?   @db.Uuid
  invoices                                invoices? @relation(fields: [applied_to_invoice_id], references: [id], onUpdate: NoAction)
  clients                                 clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_payment_credits_created_byTousers User?     @relation("payment_credits_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments                                payments? @relation(fields: [payment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_payment_credits_updated_byTousers User?     @relation("payment_credits_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([client_id], map: "idx_payment_credits_client_id")
  @@index([payment_id], map: "idx_payment_credits_payment_id")
  @@index([status], map: "idx_payment_credits_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payments {
  id                        BigInt                @id @default(autoincrement())
  uuid                      String                @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  client_id                 BigInt
  payment_number            String?               @unique @db.VarChar(50)
  payment_date              DateTime              @db.Date
  amount                    Decimal               @db.Decimal(12, 2)
  method                    payment_method
  reference_number          String?               @db.VarChar(100)
  check_number              String?               @db.VarChar(50)
  check_date                DateTime?             @db.Date
  bank_name                 String?               @db.VarChar(100)
  transaction_id            String?               @db.VarChar(100)
  authorization_code        String?               @db.VarChar(100)
  card_type                 String?               @db.VarChar(50)
  card_last_four            String?               @db.VarChar(4)
  payment_processor         String?               @db.VarChar(100)
  status                    payment_status        @default(received)
  reconciliation_status     reconciliation_status @default(unreconciled)
  notes                     String?
  created_by_user_id        BigInt?
  created_by_client_user_id BigInt?
  received_at               DateTime?             @db.Timestamptz(6)
  deposited_at              DateTime?             @db.Timestamptz(6)
  reconciled_at             DateTime?             @db.Timestamptz(6)
  created_at                DateTime              @default(now()) @db.Timestamptz(6)
  updated_at                DateTime              @default(now()) @db.Timestamptz(6)
  deleted_at                DateTime?             @db.Timestamptz(6)
  parent_account_id         String?               @db.Uuid
  payment_allocations       payment_allocations[]
  payment_attachments       payment_attachments[]
  payment_credits           payment_credits[]
  client_users              client_users?         @relation(fields: [created_by_client_user_id], references: [id], onUpdate: NoAction)
  users                     users?                @relation(fields: [created_by_user_id], references: [id], onUpdate: NoAction)
  parent_accounts           parent_accounts?      @relation(fields: [parent_account_id], references: [id], onUpdate: NoAction)
  sent_emails               sent_emails[]

  @@index([client_id], map: "idx_payments_client_id")
  @@index([created_at(sort: Desc)], map: "idx_payments_created_at")
  @@index([payment_date], map: "idx_payments_payment_date")
  @@index([status], map: "idx_payments_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model price_schedules {
  id             BigInt  @id @default(autoincrement())
  client_id      BigInt
  cpt_code_id    BigInt
  override_price Decimal @db.Decimal(10, 2)

  @@unique([client_id, cpt_code_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pricing_rules {
  id                  String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id     String            @db.Uuid
  pricing_schedule_id String            @db.Uuid
  cpt_code_id         String            @db.Uuid
  client_id           String?           @db.Uuid
  base_price          Decimal           @db.Decimal(10, 2)
  discount_percentage Decimal?          @default(0) @db.Decimal(5, 2)
  minimum_price       Decimal?          @db.Decimal(10, 2)
  maximum_price       Decimal?          @db.Decimal(10, 2)
  effective_date      DateTime          @db.Date
  expiration_date     DateTime?         @db.Date
  priority            Int?              @default(0)
  is_active           Boolean?          @default(true)
  created_at          DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?         @default(now()) @db.Timestamptz(6)
  invoice_items       invoice_items[]
  clients             clients?          @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  cpt_codes           cpt_codes         @relation(fields: [cpt_code_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organizations       organizations     @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  pricing_schedules   pricing_schedules @relation(fields: [pricing_schedule_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([organization_id, pricing_schedule_id, cpt_code_id, client_id, effective_date])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pricing_schedules {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String          @db.Uuid
  name            String
  description     String?
  effective_date  DateTime        @db.Date
  expiration_date DateTime?       @db.Date
  is_default      Boolean?        @default(false)
  is_active       Boolean?        @default(true)
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?       @default(now()) @db.Timestamptz(6)
  pricing_rules   pricing_rules[]
  organizations   organizations   @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([organization_id, name])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model report_configurations {
  id                  BigInt    @id @default(autoincrement())
  user_id             BigInt
  name                String    @db.VarChar(255)
  description         String?
  report_type         String    @db.VarChar(100)
  parameters          Json
  is_scheduled        Boolean   @default(false)
  schedule_frequency  String?   @db.VarChar(50)
  schedule_day        Int?
  schedule_time       DateTime? @db.Time(6)
  schedule_recipients String[]  @db.VarChar(255)
  is_active           Boolean   @default(true)
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  updated_at          DateTime  @default(now()) @db.Timestamptz(6)
  last_run_at         DateTime? @db.Timestamptz(6)
  users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([name, user_id], map: "unique_report_name_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model roles {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @unique
  permissions  Json           @default("[]")
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  updated_at   DateTime       @default(now()) @db.Timestamptz(6)
  client_users client_users[]
  user_roles   user_roles[]
  users        users[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scheduled_jobs {
  id                  BigInt    @id @default(autoincrement())
  job_type            String    @db.VarChar(50)
  related_entity_type String?   @db.VarChar(50)
  related_entity_id   BigInt?
  scheduled_for       DateTime  @db.Timestamptz(6)
  data                Json
  status              String    @default("pending") @db.VarChar(50)
  started_at          DateTime? @db.Timestamptz(6)
  completed_at        DateTime? @db.Timestamptz(6)
  error_message       String?
  result              Json?
  retry_count         Int?      @default(0)
  next_retry_at       DateTime? @db.Timestamptz(6)
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  updated_at          DateTime  @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sent_emails {
  id                 BigInt           @id @default(autoincrement())
  client_id          BigInt?
  invoice_id         BigInt?
  payment_id         BigInt?
  email_template_id  BigInt?
  to_email           String           @db.VarChar(255)
  to_name            String?          @db.VarChar(255)
  cc_email           String[]         @db.VarChar(255)
  bcc_email          String[]         @db.VarChar(255)
  subject            String           @db.VarChar(255)
  html_content       String?
  plain_text_content String?
  status             String           @default("sending") @db.VarChar(50)
  error_message      String?
  external_id        String?          @db.VarChar(255)
  open_count         Int?             @default(0)
  click_count        Int?             @default(0)
  first_opened_at    DateTime?        @db.Timestamptz(6)
  last_opened_at     DateTime?        @db.Timestamptz(6)
  first_clicked_at   DateTime?        @db.Timestamptz(6)
  sent_at            DateTime?        @db.Timestamptz(6)
  created_at         DateTime         @default(now()) @db.Timestamptz(6)
  updated_at         DateTime         @default(now()) @db.Timestamptz(6)
  sent_by_user_id    BigInt?
  email_templates    email_templates? @relation(fields: [email_template_id], references: [id], onUpdate: NoAction)
  payments           payments?        @relation(fields: [payment_id], references: [id], onUpdate: NoAction)
  users              users?           @relation(fields: [sent_by_user_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model system_settings {
  id                 BigInt   @id @default(autoincrement())
  key                String   @unique @db.VarChar(100)
  value              String?
  value_type         String   @default("string") @db.VarChar(20)
  description        String?
  category           String   @db.VarChar(100)
  is_sensitive       Boolean  @default(false)
  is_editable        Boolean  @default(true)
  validation_regex   String?  @db.VarChar(255)
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  updated_at         DateTime @default(now()) @db.Timestamptz(6)
  updated_by_user_id BigInt?
  users              users?   @relation(fields: [updated_by_user_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_laboratory_access {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String    @db.Uuid
  laboratory_id String    @db.Uuid
  granted_by    String?   @db.Uuid
  granted_at    DateTime? @default(now()) @db.Timestamptz(6)
  is_active     Boolean?  @default(true)

  @@unique([user_id, laboratory_id])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_permissions {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  resource   String
  actions    String[]  @default([])
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, resource])
  @@index([user_id], map: "idx_user_permissions_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_profiles {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String        @db.Uuid
  organization_id String        @db.Uuid
  role            String?       @default("user")
  permissions     Json?         @default("[]")
  is_primary      Boolean?      @default(false)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime      @default(now()) @db.Timestamptz(6)
  organizations   organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           User          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, organization_id])
  @@index([organization_id], map: "idx_user_profiles_org")
  @@index([organization_id], map: "idx_user_profiles_organization_id")
  @@index([user_id], map: "idx_user_profiles_user")
  @@index([user_id], map: "idx_user_profiles_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_roles {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String?        @db.Uuid
  role_id         String?        @db.Uuid
  organization_id String?        @db.Uuid
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  organizations   organizations? @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles           roles?         @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           User?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role_id, organization_id])
  @@index([organization_id], map: "idx_user_roles_organization_id")
  @@index([role_id], map: "idx_user_roles_role_id")
  @@index([user_id], map: "idx_user_roles_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                       BigInt                     @id @default(autoincrement())
  uuid                     String                     @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  auth_id                  String?                    @unique @db.Uuid
  first_name               String                     @db.VarChar(100)
  last_name                String                     @db.VarChar(100)
  email                    String                     @unique @db.VarChar(255)
  role                     user_role
  status                   user_status                @default(active)
  job_title                String?                    @db.VarChar(100)
  department               String?                    @db.VarChar(100)
  phone                    String?                    @db.VarChar(50)
  avatar_url               String?
  mfa_enabled              Boolean                    @default(false)
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @db.Timestamptz(6)
  deleted_at               DateTime?                  @db.Timestamptz(6)
  dashboard_layout         Json?
  role_id                  String?                    @db.Uuid
  organization_id          String?                    @db.Uuid
  current_laboratory_id    String?                    @db.Uuid
  audit_logs               audit_logs[]
  automation_rules         automation_rules[]
  email_templates          email_templates[]
  invoice_attachments      invoice_attachments[]
  invoice_history          invoice_history[]
  invoice_line_items       invoice_line_items[]
  notification_preferences notification_preferences[]
  notifications            notifications[]
  payment_allocations      payment_allocations[]
  payment_attachments      payment_attachments[]
  payments                 payments[]
  report_configurations    report_configurations[]
  sent_emails              sent_emails[]
  system_settings          system_settings[]
  users                    User?                      @relation(fields: [auth_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organizations            organizations?             @relation(fields: [organization_id], references: [id], onUpdate: NoAction)
  roles                    roles?                     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([organization_id], map: "idx_users_org")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum client_user_role {
  admin
  user

  @@schema("public")
}

enum contact_method {
  email
  phone
  fax
  portal
  mail
  mobile

  @@schema("public")
}

enum facility_type {
  hospital
  lab
  clinic
  medical_office
  nursing_home
  other

  @@schema("public")
}

enum invoice_status {
  draft
  sent
  partial
  paid
  dispute
  write_off
  exhausted
  cancelled

  @@schema("public")
}

enum payment_method {
  credit_card
  check
  ach
  wire
  cash
  adjustment
  write_off
  other

  @@schema("public")
}

enum payment_status {
  pending
  received
  deposited
  cleared
  failed
  voided
  refunded

  @@schema("public")
}

enum priority {
  low
  normal
  high
  urgent

  @@schema("public")
}

enum reconciliation_status {
  unreconciled
  partially_reconciled
  fully_reconciled
  issue

  @@schema("public")
}

enum sex {
  male
  female
  other
  unknown

  @@schema("public")
}

enum user_role {
  admin
  ar_manager
  staff

  @@schema("public")
}

enum user_status {
  active
  inactive
  invited

  @@schema("public")
}
